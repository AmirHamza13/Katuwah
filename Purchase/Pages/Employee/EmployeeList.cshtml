@*show1 edit with working:*@
@*
@page
@using Kendo.Mvc.UI;
@model Purchase.Pages.Employee.EmployeeListModel
@{
}

<div class="card">
    <div class="card-header">
       <h3>Employee List</h3>
    </div>

    @(Html.Kendo().Grid(Model.EmployeeList)
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.FirstName).Title("First Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });
            columns.Bound(c => c.LastName).Title("Last Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });

        })
        .ToolBar(toolbar => toolbar.Search())
        .Pageable(pageable => pageable.ButtonCount(10))
        .Navigatable()
        )
</div>
*@
@*show edit with working no action:*@

@page
@using Kendo.Mvc.UI
@model Purchase.Pages.Employee.EmployeeListModel

<div class="card">
    <div class="card-header">
        <h3>Employee List</h3>
    </div>

    @(Html.Kendo().Grid(Model.EmployeeList)
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.FirstName).Title("First Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });
                columns.Bound(c => c.LastName).Title("Last Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });
                columns.Command(command =>
                {
                    command.Custom("Edit").Click("editEmployee");
                    command.Custom("Delete").Click("deleteEmployee");
                }).Title("Actions").Width(200).HtmlAttributes(new { style = "text-align:center;" });
            })
            .ToolBar(toolbar => toolbar.Search())
            .Pageable(pageable => pageable.ButtonCount(10))
            .Navigatable()
        )
</div>

<script>
    function editEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var employeeId = dataItem.Id;
        // Redirect to the EditEmployee page with the employeeId parameter
        window.location.href = "/Employee/EditEmployee?id=" + employeeId;
    }

    function deleteEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var employeeId = dataItem.Id;
        // Show a confirmation dialog before deleting the employee
        if (confirm("Are you sure you want to delete this employee?")) {
            // Perform the delete action
            $.ajax({
                url: "/Employee/DeleteEmployee",
                type: "POST",
                data: { id: employeeId },
                success: function () {
                    // Refresh the grid after successful deletion
                    $("#grid").data("kendoGrid").dataSource.read();
                },
                error: function (xhr, status, error) {
                    // Handle error, if any
                    console.log(error);
                }
            });
        }
    }
</script>

@*show edit with working:*@
@*
@page
@using Kendo.Mvc.UI
@model Purchase.Pages.Employee.EmployeeListModel

<div class="card">
    <div class="card-header">
        <h3>Employee List</h3>
    </div>

    @(Html.Kendo().Grid(Model.EmployeeList)
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.FirstName).Title("First Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });
            columns.Bound(c => c.LastName).Title("Last Name").HeaderHtmlAttributes(new { @style = "font-weight:bold;" });
            columns.Command(command =>
            {
                command.Custom("Edit").Click("editEmployee");
                command.Custom("Delete").Click("deleteEmployee");
            }).Title("Actions").Width(200).HtmlAttributes(new { style = "text-align:center;" });
        })
        .ToolBar(toolbar => toolbar.Search())
        .Pageable(pageable => pageable.ButtonCount(10))
        .Navigatable()
    )
</div>

<script>
    function editEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var employeeId = dataItem.Id;
        // Redirect to the EditEmployee page with the employeeId parameter
        window.location.href = "/Employee/EditEmployee?id=" + employeeId;
    }

    function deleteEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var employeeId = dataItem.Id;
        // Show a confirmation dialog before deleting the employee
        if (confirm("Are you sure you want to delete this employee?")) {
            // Perform the delete action
            $.ajax({
                url: "/Employee/DeleteEmployee",
                type: "POST",
                data: { id: employeeId },
                success: function (result) {
                    // Refresh the grid after successful deletion
                    if (result.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                    } else {
                        alert(result.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle error, if any
                    console.log(error);
                }
            });
        }
    }
</script>

*@